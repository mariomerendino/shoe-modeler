 /*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/model.glb')
  const [dupedMaterials, updateDupedMaterials] = useState({});
  // This is a hack because all portions of the shoe were using the same material, "Main_"
  // By duplicating the material for each node, we can update colors individually. 
  useEffect(() => {
    let newMaterials = {}
    Object.keys(nodes).forEach((node_key) => {
      newMaterials[node_key] = materials.Main_.clone();
    })

    updateDupedMaterials(newMaterials)
  // eslint-disable-next-line
  }, [])

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Back_Down.geometry} material={dupedMaterials.Back_Down} position={[0.35, -0.46, 1.02]} rotation={[-Math.PI, 0, -Math.PI]} material-color={props.modifiedColors['Back_Down']} onClick={() => props.updateCurrentSelection('Back_Down')}  />
      <mesh geometry={nodes.Back_Little_Part.geometry} material={materials.Back_Little_Part} position={[0.68, 0.2, 0.98]} rotation={[1.56, 0.07, Math.PI / 2]} material-color={props.modifiedColors['Back_Little_Part']} onClick={() => props.updateCurrentSelection('Back_Little_Part')}/>
      <mesh geometry={nodes.Back_Mid.geometry} material={dupedMaterials.Back_Mid} position={[-0.08, 0.53, 1.1]} rotation={[0, -Math.PI / 2, 0]} material-color={props.modifiedColors['Back_Mid']} onClick={() => props.updateCurrentSelection('Back_Mid')} />.
      <mesh geometry={nodes.Back_Top_.geometry} material={dupedMaterials.Back_Top_} position={[0.09, 0.86, 1.07]} rotation={[Math.PI, -0.26, Math.PI]} material-color={props.modifiedColors['Back_Top_']} onClick={() => props.updateCurrentSelection('Back_Top_')} />.
      <mesh geometry={nodes.Central_.geometry} material={dupedMaterials.Central_} position={[-0.51, -0.23, 1.18]} rotation={[Math.PI, -0.34, Math.PI]} material-color={props.modifiedColors['Central_']} onClick={() => props.updateCurrentSelection('Central_')} />.
      <mesh geometry={nodes.Circle.geometry} material={dupedMaterials.Circle} position={[-2.29, -1.26, 0.92]} rotation={[Math.PI / 2, 0, -2.05]} material-color={props.modifiedColors['Circle']} onClick={() => props.updateCurrentSelection('Circle')} />.
      <mesh geometry={nodes.Down_With_Holes.geometry} material={dupedMaterials.Down_With_Holes} position={[-1.83, -0.39, 1.3]} rotation={[Math.PI / 2, 0, -Math.PI]} material-color={props.modifiedColors['Down_With_Holes']} onClick={() => props.updateCurrentSelection('Down_With_Holes')} />.
      <mesh geometry={nodes.Front_part_.geometry} material={dupedMaterials.Front_part_} position={[-2.59, -0.7, 1.2]} rotation={[Math.PI / 2, 0, -Math.PI]} material-color={props.modifiedColors['Front_part_']} onClick={() => props.updateCurrentSelection('Front_part_')} />.
      <mesh geometry={nodes.Front_With_Holes.geometry} material={dupedMaterials.Front_With_Holes} position={[-2.61, -0.47, 1.21]} rotation={[0, -Math.PI / 2, 0]} material-color={props.modifiedColors['Front_With_Holes']} onClick={() => props.updateCurrentSelection('Front_With_Holes')} />.
      <mesh geometry={nodes.Inserts.geometry} material={dupedMaterials.Inserts} position={[-0.36, 0.24, 1.11]} rotation={[Math.PI, -0.34, Math.PI]} material-color={props.modifiedColors['Inserts']} onClick={() => props.updateCurrentSelection('Inserts')} />.
      <mesh geometry={nodes.Label_Back.geometry} material={dupedMaterials.Label_Back} position={[-0.65, 1.03, 1.16]} rotation={[Math.PI / 2, -1.02, Math.PI / 2]} material-color={props.modifiedColors['Label_Back']} onClick={() => props.updateCurrentSelection('Label_Back')} />.
      <mesh geometry={nodes.Label_Front.geometry} material={dupedMaterials.Label_Front} position={[-0.71, 1.26, 1.21]} rotation={[1.6, -0.91, 1.6]} material-color={props.modifiedColors['Label_Front']} onClick={() => props.updateCurrentSelection('Label_Front')} />.
      <mesh geometry={nodes.Logo.geometry} material={dupedMaterials.Logo} position={[-0.1, 0.51, 1.74]} rotation={[0.11, 0.21, -0.36]} material-color={props.modifiedColors['Logo']} onClick={() => props.updateCurrentSelection('Logo')} />.
      <mesh geometry={nodes.Main_sole.geometry} material={dupedMaterials.Main_sole} position={[-1.36, -1.23, 1.14]} rotation={[Math.PI / 2, 0, -2.05]} material-color={props.modifiedColors['Main_sole']} onClick={() => props.updateCurrentSelection('Main_sole')} />.
      <mesh geometry={nodes.Middle_With_Holes.geometry} material={dupedMaterials.Middle_With_Holes} position={[-0.98, 0.38, 1.19]} rotation={[Math.PI / 2, 0.6, -Math.PI]} material-color={props.modifiedColors['Middle_With_Holes']} onClick={() => props.updateCurrentSelection('Middle_With_Holes')} />.
      <mesh geometry={nodes.Nike_.geometry} material={dupedMaterials.Nike_} position={[-0.19, -0.15, 1.08]} rotation={[Math.PI / 2, 0, -Math.PI]} material-color={props.modifiedColors['Nike_']} onClick={() => props.updateCurrentSelection('Nike_')} />.
      <mesh geometry={nodes.Nike_Logo.geometry} material={dupedMaterials.Nike_Logo} position={[-1.13, -1.25, 1.28]} rotation={[Math.PI / 2, 0, -2.05]} material-color={props.modifiedColors['Nike_Logo']} onClick={() => props.updateCurrentSelection('Nike_Logo')} />.
      <mesh geometry={nodes.Seams.geometry} material={dupedMaterials.Seams} position={[-1.34, -0.91, 1.16]} rotation={[-1.57, -0.02, -1.57]} scale={0.04} material-color={props.modifiedColors['Seams']} onClick={() => props.updateCurrentSelection('Seams')} />.
      <mesh geometry={nodes.Shoelace.geometry} material={dupedMaterials.Shoelace} position={[-1.37, 0.2, 1.21]} rotation={[-Math.PI, 1.56, -Math.PI]} material-color={props.modifiedColors['Shoelace']} onClick={() => props.updateCurrentSelection('Shoelace')} />.
      <mesh geometry={nodes.Tongue.geometry} material={dupedMaterials.Tongue} position={[-0.95, 0.44, 1.23]} rotation={[Math.PI / 2, -1.02, Math.PI / 2]} material-color={props.modifiedColors['Tongue']} onClick={() => props.updateCurrentSelection('Tongue')} /> 
      <mesh geometry={nodes.Top_Round_.geometry} material={dupedMaterials.Top_Round_} position={[-0.03, 1.03, 1.09]} rotation={[Math.PI, -0.26, Math.PI]} material-color={props.modifiedColors['Top_Round_']} onClick={() => props.updateCurrentSelection('Top_Round_')} />.
      <mesh geometry={nodes.Tubes.geometry} material={dupedMaterials.Tubes} position={[-2.32, -1.23, 1.16]} rotation={[Math.PI / 2, 0, -2.05]} material-color={props.modifiedColors['Tubes']} onClick={() => props.updateCurrentSelection('Tubes')} />.
      <mesh geometry={nodes.Under_feet.geometry} material={dupedMaterials.Under_feet} position={[-1.2, -0.93, 1.13]} rotation={[0, -Math.PI / 2, 0]} material-color={props.modifiedColors['Under_feet']} onClick={() => props.updateCurrentSelection('Under_feet')} />.
      <mesh geometry={nodes.Under_Sole_Plate.geometry} material={dupedMaterials.Under_Sole_Plate} position={[-1.28, -1.19, 1.18]} rotation={[Math.PI / 2, 0, -2.05]} material-color={props.modifiedColors['Under_Sole_Plate']} onClick={() => props.updateCurrentSelection('Under_Sole_Plate')} />.
      <mesh geometry={nodes.Back_Down001.geometry} material={dupedMaterials.Back_Down001} position={[0.38, -0.46, -1.02]} rotation={[-Math.PI, 0, 0]} scale={-1} material-color={props.modifiedColors['Back_Down001']} onClick={() => props.updateCurrentSelection('Back_Down001')} />.
      <mesh geometry={nodes.Back_Little_Part001.geometry} material={dupedMaterials.Back_Little_Part001} position={[0.71, 0.2, -0.98]} rotation={[-1.56, -0.07, -Math.PI / 2]} scale={-1} material-color={props.modifiedColors['Back_Little_Part']} onClick={() => props.updateCurrentSelection('Back_Little_Part')} />.
      <mesh geometry={nodes.Back_Mid001.geometry} material={dupedMaterials.Back_Mid001} position={[-0.04, 0.53, -1.1]} rotation={[-Math.PI, Math.PI / 2, 0]} scale={-1} material-color={props.modifiedColors['Back_Mid001']} onClick={() => props.updateCurrentSelection('Back_Mid001')}/>
      <mesh geometry={nodes.Back_Top_001.geometry} material={dupedMaterials.Back_Top_001} position={[0.12, 0.86, -1.07]} rotation={[-Math.PI, 0.26, 0]} scale={-1} material-color={props.modifiedColors['Back_Top_001']} onClick={() => props.updateCurrentSelection('Back_Top_001')} />.
      <mesh geometry={nodes.Central_001.geometry} material={dupedMaterials.Central_001} position={[-0.48, -0.23, -1.18]} rotation={[-Math.PI, 0.34, 0]} scale={-1} material-color={props.modifiedColors['Central_001']} onClick={() => props.updateCurrentSelection('Central_001')} />.
      <mesh geometry={nodes.Circle001.geometry} material={dupedMaterials.Circle001} position={[-2.26, -1.26, -0.92]} rotation={[-Math.PI / 2, 0, 1.09]} scale={-1} material-color={props.modifiedColors['Circle001']} onClick={() => props.updateCurrentSelection('Circle001')} />.
      <mesh geometry={nodes.Down_With_Holes001.geometry} material={dupedMaterials.Down_With_Holes001} position={[-1.8, -0.39, -1.3]} rotation={[-Math.PI / 2, 0, 0]} scale={-1} material-color={props.modifiedColors['Down_With_Holes001']} onClick={() => props.updateCurrentSelection('Down_With_Holes001')} />.
      <mesh geometry={nodes.Front_part_001.geometry} material={dupedMaterials.Front_part_001} position={[-2.56, -0.7, -1.2]} rotation={[-Math.PI / 2, 0, 0]} scale={-1} material-color={props.modifiedColors['Front_part_001']} onClick={() => props.updateCurrentSelection('Front_part_001')} />.
      <mesh geometry={nodes.Front_With_Holes001.geometry} material={dupedMaterials.Front_With_Holes001} position={[-2.57, -0.47, -1.21]} rotation={[-Math.PI, Math.PI / 2, 0]} scale={-1} material-color={props.modifiedColors['Back_Little_Part']} onClick={() => props.updateCurrentSelection('Back_Little_Part')} />.
      <mesh geometry={nodes.Inserts001.geometry} material={dupedMaterials.Inserts001} position={[-0.33, 0.24, -1.11]} rotation={[-Math.PI, 0.34, 0]} scale={-1} material-color={props.modifiedColors['Inserts001']} onClick={() => props.updateCurrentSelection('Inserts001')} />.
      <mesh geometry={nodes.Label_Back001.geometry} material={materials['Material.001']} position={[-0.62, 1.03, -1.16]} rotation={[-Math.PI / 2, 1.02, -Math.PI / 2]} scale={-1} material-color={props.modifiedColors['Material.001']} onClick={() => props.updateCurrentSelection('Material.001')} />.
      <mesh geometry={nodes.Label_Front001.geometry} material={materials['Material.001']} position={[-0.68, 1.26, -1.21]} rotation={[-1.6, 0.91, -1.54]} scale={-1} material-color={props.modifiedColors['Material.001']} onClick={() => props.updateCurrentSelection('Material.001')} />.
      <mesh geometry={nodes.Logo001.geometry} material={dupedMaterials.Logo001} position={[-0.07, 0.51, -1.74]} rotation={[-0.11, -0.21, 2.78]} scale={-1} material-color={props.modifiedColors['Logo001']} onClick={() => props.updateCurrentSelection('Logo001')} />.
      <mesh geometry={nodes.Main_sole001.geometry} material={dupedMaterials.Main_sole001} position={[-1.32, -1.23, -1.14]} rotation={[-Math.PI / 2, 0, 1.09]} scale={-1} material-color={props.modifiedColors['Main_sole001']} onClick={() => props.updateCurrentSelection('Main_sole001')} />.
      <mesh geometry={nodes.Middle_With_Holes001.geometry} material={dupedMaterials.Middle_With_Holes001} position={[-0.95, 0.38, -1.19]} rotation={[-Math.PI / 2, -0.6, 0]} scale={-1} material-color={props.modifiedColors['Middle_With_Holes001']} onClick={() => props.updateCurrentSelection('Middle_With_Holes001')} />.
      <mesh geometry={nodes.Nike_001.geometry} material={dupedMaterials.Nike_001} position={[-0.16, -0.15, -1.08]} rotation={[-Math.PI / 2, 0, 0]} scale={-1} material-color={props.modifiedColors['Nike_001']} onClick={() => props.updateCurrentSelection('Nike_001')} />.
      <mesh geometry={nodes.Nike_Logo001.geometry} material={dupedMaterials.Nike_Logo001} position={[-1.1, -1.25, -1.28]} rotation={[-Math.PI / 2, 0, 1.09]} scale={-1} material-color={props.modifiedColors['Nike_Logo001']} onClick={() => props.updateCurrentSelection('Nike_Logo001')} />.
      <mesh geometry={nodes.Seams001.geometry} material={dupedMaterials.Seams001} position={[-1.31, -0.91, -1.16]} rotation={[1.57, 0.02, 1.57]} scale={-0.04} material-color={props.modifiedColors['Seams001']} onClick={() => props.updateCurrentSelection('Seams001')} />.
      <mesh geometry={nodes.Shoelace001.geometry} material={dupedMaterials.Shoelace001} position={[-1.34, 0.2, -1.21]} rotation={[Math.PI, -1.56, 0]} scale={-1}material-color={props.modifiedColors['Shoelace001']} onClick={() => props.updateCurrentSelection('Shoelace001')} />.
      <mesh geometry={nodes.Tongue001.geometry} material={dupedMaterials.Tongue001} position={[-0.92, 0.44, -1.23]} rotation={[-Math.PI / 2, 1.02, -Math.PI / 2]} scale={-1} material-color={props.modifiedColors['Tongue001']} onClick={() => props.updateCurrentSelection('Tongue001')} />.
      <mesh geometry={nodes.Top_Round_001.geometry} material={dupedMaterials.Top_Round_001} position={[0.01, 1.03, -1.09]} rotation={[-Math.PI, 0.26, 0]} scale={-1} material-color={props.modifiedColors['Top_Round_001']} onClick={() => props.updateCurrentSelection('Top_Round_001')} />.
      <mesh geometry={nodes.Tubes001.geometry} material={dupedMaterials.Tubes001} position={[-2.29, -1.23, -1.16]} rotation={[-Math.PI / 2, 0, 1.09]} scale={-1} material-color={props.modifiedColors['Tubes001']} onClick={() => props.updateCurrentSelection('Tubes001')} />.
      <mesh geometry={nodes.Under_feet001.geometry} material={dupedMaterials.Under_feet001} position={[-1.17, -0.93, -1.13]} rotation={[-Math.PI, Math.PI / 2, 0]} scale={-1} material-color={props.modifiedColors['Under_feet001']} onClick={() => props.updateCurrentSelection('Under_feet001')} />.
      <mesh geometry={nodes.Under_Sole_Plate001.geometry} material={dupedMaterials.Under_Sole_Plate001} position={[-1.25, -1.19, -1.18]} rotation={[-Math.PI / 2, 0, 1.09]} scale={-1} material-color={props.modifiedColors['Under_Sole_Plate001']} onClick={() => props.updateCurrentSelection('Under_Sole_Plate001')} />.
    </group>
  )
}

useGLTF.preload('/model.glb')
